complete -c warp-cli -x
complete -c warp-cli -n "__fish_no_arguments" -s l -l listen -d "Listen for status changes and DNS logs (if enabled)"
complete -c warp-cli -n "__fish_no_arguments" -l accept-tos -d "Accept the Terms of Service agreement"
complete -c warp-cli -n "__fish_no_arguments" -s v -l verbose -d "Enable verbose output. Multiple "v"s adds more verbosity"
complete -c warp-cli -n "__fish_no_arguments" -s V -l version -d "Print version"
complete -c warp-cli -s h -l help -d "Print help"

complete -c warp-cli -n "__fish_use_subcommand" -a register -d "Register with the WARP API, replacing any existing registration"
complete -c warp-cli -n "__fish_use_subcommand" -a teams-enroll -d "Enroll with Cloudflare for Teams"
complete -c warp-cli -n "__fish_use_subcommand" -a delete -d "Delete current registration"
complete -c warp-cli -n "__fish_use_subcommand" -a rotate-keys -d "Generate a new key-pair, keeping the current registration"
complete -c warp-cli -n "__fish_use_subcommand" -a status -d "Ask the daemon to send the current status"
complete -c warp-cli -n "__fish_use_subcommand" -a warp-stats -d "Retrieve the stats for the current WARP connection"
complete -c warp-cli -n "__fish_use_subcommand" -a warp-dns-stats -d "Retrieve the DNS stats for the current WARP connection"
complete -c warp-cli -n "__fish_use_subcommand" -a settings -d "Retrieve the current application settings"
complete -c warp-cli -n "__fish_use_subcommand" -a connect -d "Connect to WARP whenever possible (alias: enable-always-on)"
complete -c warp-cli -n "__fish_use_subcommand" -a enable-always-on -d "Connect to WARP whenever possible (alias: connect)"
complete -c warp-cli -n "__fish_use_subcommand" -a disconnect -d "Disconnect from WARP (alias: disable-always-on)"
complete -c warp-cli -n "__fish_use_subcommand" -a disable-always-on -d "Disconnect from WARP (alias: disconnect)"
complete -c warp-cli -n "__fish_use_subcommand" -a disable-wifi -d "Automatically disable WARP on Wi-Fi networks (disabled for Zero Trust customers)"
complete -c warp-cli -n "__fish_use_subcommand" -a enable-wifi -d "Allow WARP on Wi-Fi networks (disabled for Zero Trust customers)"
complete -c warp-cli -n "__fish_use_subcommand" -a disable-ethernet -d "Automatically disable WARP on ethernet networks (disabled for Zero Trust customers)"
complete -c warp-cli -n "__fish_use_subcommand" -a enable-ethernet -d "Allow WARP on ethernet networks (disabled for Zero Trust customers)"
complete -c warp-cli -n "__fish_use_subcommand" -a add-trusted-ssid -d "Add a trusted Wi-Fi network for which WARP will be automatically disconnected"
complete -c warp-cli -n "__fish_use_subcommand" -a remove-trusted-ssid -d "Remove a trusted Wi-Fi network"
complete -c warp-cli -n "__fish_use_subcommand" -a exclude-private-ips -d "Exclude private IP ranges from tunnel"
complete -c warp-cli -n "__fish_use_subcommand" -a enable-dns-log -d "Enable DNS logging (Use with the -l option)"
complete -c warp-cli -n "__fish_use_subcommand" -a disable-dns-log -d "Disable DNS logging"
complete -c warp-cli -n "__fish_use_subcommand" -a account -d "Display the account associated with the current registration"
complete -c warp-cli -n "__fish_use_subcommand" -a devices -d "Display the list of devices associated with the current registration"
complete -c warp-cli -n "__fish_use_subcommand" -a network -d "Display the current network information"
complete -c warp-cli -n "__fish_use_subcommand" -a get-virtual-networks -d "List the available virtual networks"
complete -c warp-cli -n "__fish_use_subcommand" -a set-virtual-network -d "Set the currently connected virtual network via the id from get-virtual-networks"
complete -c warp-cli -n "__fish_use_subcommand" -a set-mode  -d "Set the mode"
complete -c warp-cli -n "__fish_seen_subcommand_from set-mode" -a "warp doh warp+doh dot warp+dot proxy"
complete -c warp-cli -n "__fish_use_subcommand" -a set-families-mode -d "Set the families mode"
complete -c warp-cli -n "__fish_seen_subcommand_from set-families-mode" -a "full malware off"
complete -c warp-cli -n "__fish_use_subcommand" -a set-license -d "Attach the current registration to a different account using a license key"
complete -c warp-cli -n "__fish_use_subcommand" -a set-gateway -d "Force the app to use the specified Gateway ID for DNS queries"
complete -c warp-cli -n "__fish_use_subcommand" -a clear-gateway -d "Clear the Gateway ID"
complete -c warp-cli -n "__fish_use_subcommand" -a set-custom-endpoint -d "Force the client to connect to the specified IP:PORT endpoint (Zero Trust customers must run this command as a privileged user)"
complete -c warp-cli -n "__fish_use_subcommand" -a clear-custom-endpoint -d "Remove the custom endpoint setting"
complete -c warp-cli -n "__fish_use_subcommand" -a add-excluded-route -d "Add an excluded IP"
complete -c warp-cli -n "__fish_use_subcommand" -a remove-excluded-route -d "Remove an excluded IP"
complete -c warp-cli -n "__fish_use_subcommand" -a get-excluded-routes -d "Get the list of excluded routes"
complete -c warp-cli -n "__fish_use_subcommand" -a get-included-routes -d "Get the list of included routes"
complete -c warp-cli -n "__fish_use_subcommand" -a get-excluded-hosts -d "Get the list of excluded hosts"
complete -c warp-cli -n "__fish_use_subcommand" -a get-included-hosts -d "Get the list of included hosts"
complete -c warp-cli -n "__fish_use_subcommand" -a add-excluded-host -d "Add an excluded host"
complete -c warp-cli -n "__fish_use_subcommand" -a remove-excluded-host -d "Remove an excluded host"
complete -c warp-cli -n "__fish_use_subcommand" -a add-fallback-domain -d "Add a domain that should be resolved with the fallback resolver instead of WARP's"
complete -c warp-cli -n "__fish_use_subcommand" -a remove-fallback-domain -d "Stop a domain from being resolved with the fallback resolver"
complete -c warp-cli -n "__fish_use_subcommand" -a get-fallback-domains -d "Get the list of domains that go to the fallback resolver"
complete -c warp-cli -n "__fish_use_subcommand" -a restore-fallback-domains -d "Restore the list of fallback resolver domains to its default value"
complete -c warp-cli -n "__fish_use_subcommand" -a get-device-posture -d "Get the current device posture"
complete -c warp-cli -n "__fish_use_subcommand" -a override -d "Temporarily override MDM policies that require the client to stay enabled"
complete -c warp-cli -n "__fish_use_subcommand" -a set-proxy-port -d "Set the listening port for WARP proxy (127.0.0.1:{port})"
complete -c warp-cli -n "__fish_use_subcommand" -a is-mode-switch-allowed -d "Outputs true if Teams users should be able to change connection mode, or false if not"
complete -c warp-cli -n "__fish_use_subcommand" -a reset-settings -d "Restore settings to default"
complete -c warp-cli -n "__fish_use_subcommand" -a get-organization -d "Get the name of the Teams organization currently in settings"
complete -c warp-cli -n "__fish_use_subcommand" -a access-reauth -d "Force refresh authentication with Cloudflare Access"
complete -c warp-cli -n "__fish_use_subcommand" -a get-support-url -d "Get the support url for the current Teams organization"
complete -c warp-cli -n "__fish_use_subcommand" -a get-pause-end -d "Retrieve the pause end time"
complete -c warp-cli -n "__fish_use_subcommand" -a get-override-end -d "Retrieve the admin override end time"
complete -c warp-cli -n "__fish_use_subcommand" -a disable-connectivity-checks -d "Disable the runtime connectivity checks"
complete -c warp-cli -n "__fish_use_subcommand" -a enable-connectivity-checks -d "Enable the runtime connectivity checks"
complete -c warp-cli -n "__fish_use_subcommand" -a dump-excluded-routes -d "Get split tunnel routing dump. For include-only mode, this shows routes NOT included"
complete -c warp-cli -n "__fish_use_subcommand" -a get-alternate-network -d "Get the name of the currently detected alternate network, if any"
complete -c warp-cli -n "__fish_use_subcommand" -a get-dex-data -d "Get the most recently uploaded DEX data. Returns the most recent test for each dex metric"
complete -c warp-cli -n "__fish_use_subcommand" -a help -d "Print this message or the help of the given subcommand(s)"
